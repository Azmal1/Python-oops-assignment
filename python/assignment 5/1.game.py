# Create a program that will play the “cows and bulls” game with the user. The game works like this:

# Randomly generate a 4-digit number. Ask the user to guess a 4-digit number(Digits should not be repeated). For every digit that the user guessed correctly in the correct place, they have a “cow”. For every digit the user guessed correctly in the wrong place is a “bull.” Every time the user makes a guess, tell them how many “cows” and “bulls” they have. Once the user guesses the correct number, the game is over. Keep track of the number of guesses the user makes throughout teh game and tell the user at the end.

# Say the number generated by the computer is 1038. An example interaction could look like this:

#   Welcome to the Cows and Bulls Game! 
#   Enter a number: 
#   >>> 1234
#   2 cows, 0 bulls
#   >>> 1250
#   1 cow, 1 bull
#   ...
# Until the user guesses the number.


import random

def generate_random_number():
    digits = list(range(10))
    random.shuffle(digits)
    return "".join(str(d) for d in digits[:4])

def count_cows_and_bulls(secret_number, guess):
    cows, bulls = 0, 0
    for i in range(4):
        if guess[i] == secret_number[i]:
            cows += 1
        elif guess[i] in secret_number:
            bulls += 1
    return cows, bulls

def is_valid_guess(guess):
    if not guess.isdigit() or len(guess) != 4 or len(set(guess)) != 4:
        return False
    return True

def play_cows_and_bulls():
    secret_number = generate_random_number()
    attempts = 0

    print("Welcome to the Cows and Bulls Game!")

    while True:
        guess = input("Enter a 4-digit number (digits should not be repeated): ")
        if not is_valid_guess(guess):
            print("Invalid input. Please enter a 4-digit number with unique digits.")
            continue

        attempts += 1
        cows, bulls = count_cows_and_bulls(secret_number, guess)

        if cows == 4:
            print(f"Congratulations! You guessed the number {secret_number} correctly in {attempts} attempts.")
            break
        else:
            print(f"{cows} cows, {bulls} bulls")

if __name__ == "__main__":
    play_cows_and_bulls()
